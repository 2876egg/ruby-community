- breadcrumb "Commands" => ruboto_commands_path

h1.page-title List of ruby[bot]'s commands

h2 Public Commands

h6 >> ruby_code
p Executes the given code and prints either the result or the first line of the output

h6 VER>> ruby_code
p
  | Executes the code using the specified Ruby version. E.g. <code>18>> RUBY_VERSION</code> will run the 
  | code using Ruby 1.8.
p
  | Available versions, the latest available patch release available on eval.in for each will be used:
  ul
    li <code>23</code> - for Ruby 2.3
    li <code>22</code> - for Ruby 2.2
    li <code>21</code> - for Ruby 2.1
    li <code>20</code> - for Ruby 2.0
    li <code>19</code> - for Ruby 1.9
    li <code>18</code> - for Ruby 1.8
    li <code>10</code> - for Ruby 1.0

h6 MODE>> ruby_code
p
  | Executes the code using the mode. E.g. <code>asm>> 1 + 1</code> to disassemble the given code.
p
  | Available modes:
  ul
    li <code>default</code> - Runs the given Ruby code normally with the default Ruby version.
    li <code>asm</code> - Disassembles the given Ruby code into instructions for the Ruby Virtual Machine.
    li <code>ast</code> - Returns a representation of the AST resulting from the given Ruby code.
    li <code>tok</code> - Returns the tokens for the given Ruby code as seen by Ruby's lexer.

h6 ?fact [target]
p
  | Responds with the fact. Take a look at <a href="#{ruboto_facts_path}">the list of facts</a>.
  br
  | If target is provided, ruby[bot] will address that user with the fact.

h6 !ops [all]
p
  | Lists active ops.
  br
  | With the <code>all</code> parameter, it will list all ops, not just active ones.

h2 Commands restricted to operators

table.top-aligned
  tbody
    tr
      th qkick
      td '!qkick nick [channel] [reason]'<br>kicks a user
    tr
      th kick
      td '!kick nick [channel] [duration] [reason][ "|" secret_reason]'<br>kicks the user and bans them for 1min in order for them to take notice of the kick
    tr
      th mute
      td '!mute nick [channel] [duration] [reason][ "|" secret_reason]'<br>mutes the user
    tr
      th ban
      td '!ban nick [channel] [duration] [reason][ "|" secret_reason]'<br>bans the user
    tr
      th connection
      td '!connection nick [channel]'<br>kicks the user, bans them for 3 days and redirects to #ruby-fix-your-connection
    tr
      th fixcon
      td   same as !connection.
    tr
      th spam
      td '!spam nick [channel]'<br>kicks and bans for a day
    tr
      th rude
      td '!rude nick [channel]'<br>kicks and bans for an hour
    tr
      th badnick
      td '!badnick nick [channel]'<br>kicks and bans nick-only permanently (note: this one seems to be buggy atm and not work as advertized)
    tr
      th troll
      td '!troll nick [channel]'<br>kicks and bans for a week
    tr
      th flood
      td '!flood nick [channel]'<br>only kicks
    tr
      th add a factoid
      td !fact (add |mk) LABEL TEXT
    tr
      th delete a factoid
      td !fact (remove | rm) LABEL
    tr
      th edit a factoid
      td !fact (edit | ed) LABEL TEXT


-# \
 # * Channel logging \
 # * pastebin detection
